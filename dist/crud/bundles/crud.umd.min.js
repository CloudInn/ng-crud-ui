!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/forms"),require("rxjs"),require("@angular/router"),require("@angular/common/http"),require("@angular/material/snack-bar"),require("@angular/material/table"),require("@angular/material/dialog"),require("rxjs/operators"),require("@angular/common"),require("ngx-moment"),require("@angular/material")):"function"==typeof define&&define.amd?define("crud",["exports","@angular/core","@angular/forms","rxjs","@angular/router","@angular/common/http","@angular/material/snack-bar","@angular/material/table","@angular/material/dialog","rxjs/operators","@angular/common","ngx-moment","@angular/material"],t):t(e.crud={},e.ng.core,e.ng.forms,e.rxjs,e.ng.router,e.ng.common.http,e.ng.material["snack-bar"],e.ng.material.table,e.ng.material.dialog,e.rxjs.operators,e.ng.common,null,e.ng.material)}(this,function(e,a,u,r,t,i,o,l,n,s,m,c,p){"use strict";var d=function(e,t){return(d=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var o in t)t.hasOwnProperty(o)&&(e[o]=t[o])})(e,t)};function f(e){var t="function"==typeof Symbol&&e[Symbol.iterator],o=0;return t?t.call(e):{next:function(){return e&&o>=e.length&&(e=void 0),{value:e&&e[o++],done:!e}}}}var h=function(){function e(){this.forms={},this.registry={},this.isReady=new r.BehaviorSubject(!1)}return e.prototype.registerForm=function(e,t){var o={};try{for(var n=f(e.controls),a=n.next();!a.done;a=n.next()){var r=a.value;o[r.name]=new u.FormControl({},r.validators)}}catch(m){i={error:m}}finally{try{a&&!a.done&&(l=n["return"])&&l.call(n)}finally{if(i)throw i.error}}var i,l,s=new u.FormGroup(o);this.forms[e.name]=s},e.prototype.register=function(e){this.registry=e,this.isReady.next(!0)},e.prototype.getModules=function(){return this.registry},e.prototype.getModel=function(e,t,o){return this.registry[e].apps.filter(function(e){return e.key===t})[0].models.filter(function(e){return e.key===o})[0]},e.prototype.getApp=function(e,t){return this.registry[e].apps.filter(function(e){return e.key===t})[0]},e.prototype.getAppModels=function(e,t){return this.registry[e].apps.filter(function(e){return e.key===t}).models},e.decorators=[{type:a.Injectable,args:[{providedIn:"root"}]}],e.ctorParameters=function(){return[]},e.ngInjectableDef=a.defineInjectable({factory:function(){return new e},token:e,providedIn:"root"}),e}(),g=function(){function e(e,t,o){this.reg=e,this.router=t,this.route=o,this.appName=null,this.moduleName=null,this.modelName=null}return e.prototype.ngOnInit=function(){var o=this;this.route.params.subscribe(function(e){var t=o.route.parent.snapshot.params;o.moduleName=t.module,o.appName=t.app,o.modelName=e.model_name})},e.decorators=[{type:a.Component,args:[{template:'<section class="app-settings" *ngIf="modelName">\n\n  <ng-crud-listing [modelName]="modelName" [appName]="appName" [moduleName]="moduleName">\n\n  </ng-crud-listing>\n</section>\n',styles:["#custom-header{padding-top:12px;margin-bottom:12px}.page-title a{color:#333}.mat-tab-nav-bar,mat-tab-nav-bar{border:none!important}.tabs-bar a{color:#fff}"]}]}],e.ctorParameters=function(){return[{type:h},{type:t.Router},{type:t.ActivatedRoute}]},e}(),y=function(){function e(){this.navItems=new a.EventEmitter,this.activeNavItem=null,this.path=new a.EventEmitter}return e.decorators=[{type:a.Injectable,args:[{providedIn:"root"}]}],e.ctorParameters=function(){return[]},e.ngInjectableDef=a.defineInjectable({factory:function(){return new e},token:e,providedIn:"root"}),e}(),b=function(){function e(e,t,o,n){this.reg=e,this.router=t,this.route=o,this.navigator=n,this.app=null,this.moduleName=null,this.models=[]}return e.prototype.ngOnInit=function(){var e=this.route.snapshot.params;if(this.moduleName=e.module,this.app=this.reg.getApp(this.moduleName,e.app),this.models=this.app.models,this.renderSidebar(),!this.route.firstChild)return this.navigator.path.emit([e.module,e.app,this.models[0].key]),void this.router.navigate(["/"+e.module,e.app,this.models[0].key]);this.navigator.path.emit([e.module,e.app,this.route.firstChild.snapshot.params.model_name])},e.prototype.renderSidebar=function(){var o=this,n=[],e={title:this.app.label,type:"subheading"};n.push(e),this.models.forEach(function(e){var t={title:e.verbose_name+"s",url:"/"+o.moduleName+"/"+o.app.key+"/"+e.key};n.push(t)}),this.navigator.navItems.next(n)},e.decorators=[{type:a.Component,args:[{template:'<section class="app-settings">\n  \n  \x3c!-- <mat-card>\n    <p class="mat-subheading-1">Welcome to Cloudinn Settings</p>\n  </mat-card> --\x3e\n  <div class="container">\n    <router-outlet></router-outlet>\n  </div>\n</section>\n',styles:["#custom-header{padding-top:12px;margin-bottom:12px}.page-title a{color:#333}.mat-tab-nav-bar,mat-tab-nav-bar{border:none!important}.tabs-bar a{color:#fff}"]}]}],e.ctorParameters=function(){return[{type:h},{type:t.Router},{type:t.ActivatedRoute},{type:y}]},e}(),v=function(){function e(e){this.http=e}return e.prototype.fetch=function(e,t){var o=new i.HttpParams;return Object.keys(t).forEach(function(e){t[e]&&(o=o.set(e,t[e]))}),this.http.get(e,{params:o})},e.prototype.put=function(e,t,o){void 0===o&&(o={});var n=new i.HttpParams;return Object.keys(o).forEach(function(e){o[e]&&(n=n.set(e,o[e]))}),this.http.put(e,t,{params:n})},e.prototype.post=function(e,t,o){void 0===o&&(o={});var n=new i.HttpParams;return Object.keys(o).forEach(function(e){o[e]&&(n=n.set(e,o[e]))}),this.http.post(e,t,{params:n})},e.decorators=[{type:a.Injectable,args:[{providedIn:"root"}]}],e.ctorParameters=function(){return[{type:i.HttpClient}]},e.ngInjectableDef=a.defineInjectable({factory:function(){return new e(a.inject(i.HttpClient))},token:e,providedIn:"root"}),e}(),M={Text:0,Number:1,Date:2,DateTime:3,Time:4,Boolean:5,ForeignKey:6,ManyToMany:7,File:8};M[M.Text]="Text",M[M.Number]="Number",M[M.Date]="Date",M[M.DateTime]="DateTime",M[M.Time]="Time",M[M.Boolean]="Boolean",M[M.ForeignKey]="ForeignKey",M[M.ManyToMany]="ManyToMany",M[M.File]="File";var k,_=function(e,t,o,n,a,r,i){this.is_editable=!0,this.is_searchable=!0,this.is_hidden=!1,this.colspan=1,this.rowspan=1,this.key=t,this.label=e,this.value_type=o,this.is_editable=n,this.is_searchable=a},x=function(){this.is_fieldset=!0},N=function(){},C=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.label="some label",e}return function(e,t){function o(){this.constructor=e}d(e,t),e.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)}(e,t),e}(u.FormControl),w=function(e){var t=this;this.model=e,this.name="",this.controls=[],this.name=e.name,Object.keys(e).forEach(function(e){console.log(e),t.controls.push(new u.FormControl({}))})},I=function(){function e(e,t,o,n,a){this.api=e,this.reg=t,this.router=o,this.route=n,this.snackbar=a,this.id=null,this.mode="create",this.ngModel={},this.fieldType=M,this.editableFields=[],this.choices={}}return e.prototype.ngOnInit=function(){var t=this;this.route.parent.params.subscribe(function(e){t.module=e.module,t.appName=e.app}),this.route.params.subscribe(function(e){t.modelName=e.model_name,t.model=t.reg.getModel(t.module,t.appName,t.modelName),t.id=e.id,null!=t.id&&"new"!==t.id&&(t.mode="edit")})},e.prototype.onSubmit=function(e){var t=this;("edit"===this.mode?this.api.put(this.model.api+this.id+"/",e):this.api.post(this.model.api,e)).subscribe(function(e){t.snackbar.open("Saved Successfully","Dismiss"),t.router.navigate([t.module,t.appName,t.modelName])},function(e){t.snackbar.open("Failed to save","Dismiss")})},e.decorators=[{type:a.Component,args:[{selector:"ng-crud-model-form-screen",template:'\x3c!-- <mat-progress-bar *ngIf="isLoading" mode="query"></mat-progress-bar> --\x3e\n\n\x3c!--<form>--\x3e\n<div class="wrapper">\n    <mat-toolbar>\n        <a routerLink="/" mat-icon-button class="mat-caption"><mat-icon>home</mat-icon></a>\n        <mat-icon>keyboard_arrow_right</mat-icon>\n        <a mat-button [routerLink]="\'/\'+module+\'/\'+appName" class="mat-caption">{{ appName }}</a>\n        <mat-icon>keyboard_arrow_right</mat-icon>\n        <a mat-button class="mat-caption" [routerLink]="\'/\'+module+\'/\'+appName+\'/\'+modelName">{{ model.verbose_name }}s</a>\n        <mat-icon>keyboard_arrow_right</mat-icon>\n        <span *ngIf="mode === \'edit\'" class="mat-caption">{{ id }}</span>\n        <span *ngIf="mode === \'create\'" class="mat-caption">Creating new {{ modelName }}</span>\n        <span class="toolbar-fill-remaining-space"></span>\n    </mat-toolbar>\n\n    <mat-card>\n        <mat-card-content>\n            <ng-crud-model-form [moduleName]="module" [appName]="appName" [mode]=\'mode\'\n                [modelName]="modelName" (submit)="onSubmit($event)" [id]="id"></ng-crud-model-form>\n        </mat-card-content>\n    </mat-card>\n</div>',styles:[".wrapper {\n    padding: 24px;\n  }"],exportAs:"ngcrudui-model-form-screen"}]}],e.ctorParameters=function(){return[{type:v},{type:h},{type:t.Router},{type:t.ActivatedRoute},{type:o.MatSnackBar}]},e}(),S=function(){this.apps=[]},F=function(){this.models=[]},D=function(){this.fields=[],this.formsets=[],this.actions=[],this.bulk_actions=[],this.list_actions=[],this.pageSize=20},A=function(e){this.model=e},P=function(){},L=function(){},O=function(){function e(){}return e.prototype.toFormGroup=function(e){var t,o,n={};try{for(var a=f(e),r=a.next();!r.done;r=a.next()){var i=r.value;"formset"===i.control_type?n[i.key]=this.toFormArray(i.fields,i._value):n[i.key]=new u.FormControl(i._value)}}catch(l){t={error:l}}finally{try{r&&!r.done&&(o=a["return"])&&o.call(a)}finally{if(t)throw t.error}}return new u.FormGroup(n)},e.prototype.toFormArray=function(e,t){var o=this;t||(t=[]);var n=[];t.forEach(function(t){e.map(function(e){e._value=t[e.key]});o.toFormGroup(e);n.push(i)});var a,r,i=this.toFormGroup(e),l={};try{for(var s=f(e),m=s.next();!m.done;m=s.next()){l[m.value.key]=null}}catch(c){a={error:c}}finally{try{m&&!m.done&&(r=s["return"])&&r.call(s)}finally{if(a)throw a.error}}return i.setValue(l),n.push(i),new u.FormArray(n)},e.decorators=[{type:a.Injectable,args:[{providedIn:"root"}]}],e.ctorParameters=function(){return[]},e.ngInjectableDef=a.defineInjectable({factory:function(){return new e},token:e,providedIn:"root"}),e}(),T=function(){function e(e,t,o,n){this.api=e,this.reg=t,this.route=o,this.router=n,this.mode="normal",this.is_actions_set=!1,this.dataSource=new l.MatTableDataSource,this.searchParams={page:1},this.columns=[],this.displayColumns=[],this.resultsCount=0,this.isLoading=!0,this.picked=new a.EventEmitter}return e.prototype.ngOnChanges=function(){this.modelName&&this.populateDataTable()},e.prototype.prepareColumns=function(){var n=this;"pick"!==this.mode?this.columns=[{columnDef:"checked",header:""}]:this.columns=[],this.model.listing_fields.map(function(t){var o=n.model.fields.filter(function(e){return e.key===t})[0],e={};e.columnDef=o.key,e.header=o.label,e.cell=function(e){return""+e[o.key]},n.model.external_name_field===t&&(e.clickable=!0),n.columns.push(e)}),"pick"!==this.mode&&this.columns.push({columnDef:"actions",header:""})},e.prototype.populateDataTable=function(){this.model=this.reg.getModel(this.moduleName,this.appName,this.modelName),this.prepareColumns(),this.displayColumns=this.columns.map(function(e){return e.columnDef}),this.resultsCount=0,this.dataSource.data=[],this.searchParams={page:1},this.fetch()},e.prototype.fetch=function(){var o=this;this.api.fetch(this.model.api,this.searchParams).subscribe(function(e){var t=[];t=e.results?o.dataSource.data.concat(e.results):o.dataSource.data.concat(e),o.resultsCount=t.length,o.dataSource.data=t,o.isLoading=!1},function(e){o.isLoading=!1})},e.prototype.getLink=function(e){return["/",this.moduleName,this.appName,this.modelName,e]},e.prototype.cellClicked=function(e,t){e===this.model.external_name_field&&this.router.navigate(this.getLink(t.id))},e.prototype.onSearch=function(e){this.isLoading=!0,this.dataSource.data=[],this.resultsCount=0,this.searchParams=e,this.searchParams.page=1,this.fetch()},e.prototype.onChecked=function(e){e.is_checked=!0},e.prototype.onCheckAll=function(){},e.prototype._picked=function(e){this.picked.next(e)},e.decorators=[{type:a.Component,args:[{selector:"ng-crud-listing",template:'\x3c!-- <mat-toolbar>\n    <a routerLink="/" mat-icon-button class="mat-caption"><mat-icon>home</mat-icon></a>\n    <mat-icon>keyboard_arrow_right</mat-icon>\n    <a mat-button [routerLink]="\'/\'+moduleName+\'/\'+appName" class="mat-caption">{{ appName }}</a>\n    <mat-icon>keyboard_arrow_right</mat-icon>\n    <a mat-button class="mat-caption">{{ model.verbose_name }}s</a>\n    <span class="toolbar-fill-remaining-space"></span>\n    <a mat-button [routerLink]="\'/\'+moduleName+\'/\'+appName+\'/\'+modelName+\'/new\'" color="primary">Create</a>\n    &nbsp;\n    <button mat-button color="warn" [matMenuTriggerFor]="menu">Bulk Actions <mat-icon>arrow_drop_down</mat-icon></button>    \n    <mat-menu #menu="matMenu" >\n        <button mat-menu-item>Delete</button>\n    </mat-menu>\n</mat-toolbar> --\x3e\n\n<div class="row" *ngIf="mode !== \'pick\'">\n    <span class="fill-remaining-space"></span>\n    <button mat-button color="warn" [matMenuTriggerFor]="menu">Bulk Actions <mat-icon>arrow_drop_down</mat-icon></button>    \n    <mat-menu #menu="matMenu" >\n        <button mat-menu-item>Delete</button>\n    </mat-menu>\n</div>\n\n<mat-expansion-panel>\n    <mat-expansion-panel-header>\n        <mat-panel-title>\n            <mat-icon>search</mat-icon>\n        </mat-panel-title>\n        <mat-panel-description>\n            Search and filter restults\n        </mat-panel-description>                \n    </mat-expansion-panel-header>\n\n    <ng-crud-model-form [moduleName]="moduleName" [appName]="appName" mode=\'search\'\n                 [modelName]="modelName" (submit)="onSearch($event)"></ng-crud-model-form>\n\n</mat-expansion-panel>    \n\n<mat-progress-bar *ngIf="isLoading" mode="query"></mat-progress-bar>\n\n<mat-table [dataSource]="dataSource">\n    <ng-container *ngFor="let column of columns" [matColumnDef]="column.columnDef">\n        <ng-template [ngIf]="column.columnDef === \'checked\'">\n            <mat-header-cell *matHeaderCellDef (click)="onCheckAll()"><mat-checkbox></mat-checkbox></mat-header-cell>\n            <mat-cell *matCellDef="let row"> <mat-checkbox></mat-checkbox> </mat-cell>\n        </ng-template>\n        <ng-template [ngIf]="column.columnDef !== \'checked\' && column.columnDef !== \'actions\'">\n            <mat-header-cell *matHeaderCellDef>{{ column.header }}</mat-header-cell>\n            <mat-cell *matCellDef="let row">\n                \x3c!-- <a *ngIf="column.clickable; else normal" [routerLink]="getLink(row.id)">{{ column.cell(row) }}</a>\n                <ng-template #normal>{{ column.cell(row) }}</ng-template>     --\x3e\n                <a class="clickable" [routerLink]="[row.id]" *ngIf="(mode !== \'pick\' && column.columnDef === model.external_name_field); else normalCell">\n                    {{ column.cell(row) }}\n                </a>\n                <ng-template #normalCell>\n                    {{ column.cell(row) }}\n                </ng-template>\n            </mat-cell>\n        </ng-template>\n        <ng-template [ngIf]="column.columnDef === \'actions\'">\n            <mat-header-cell *matHeaderCellDef>{{ column.header }}</mat-header-cell>\n            <mat-cell *matCellDef="let row">\n                <button mat-button *ngFor="let action of model.list_actions">\n                    {{ action }}\n                </button>\n            </mat-cell>\n            </ng-template>\n    </ng-container>\n\n    <mat-header-row *matHeaderRowDef="displayColumns"></mat-header-row>\n    <mat-row  *matRowDef="let row; columns: displayColumns;" [ngClass]="{\'clickable\': mode === \'pick\'}" (click)="_picked(row[this.model.external_value_field])"></mat-row>\n</mat-table>\n\n<mat-paginator #paginator\n    [length]="resultsCount"\n    [pageIndex]="searchParams.page - 1"\n    [pageSize]="20">\n</mat-paginator>',styles:[".clickable{color:#00f;cursor:pointer}"],exportAs:"ngcrudui-listing"}]}],e.ctorParameters=function(){return[{type:v},{type:h},{type:t.ActivatedRoute},{type:t.Router}]},e.propDecorators={moduleName:[{type:a.Input,args:["moduleName"]}],appName:[{type:a.Input,args:["appName"]}],modelName:[{type:a.Input,args:["modelName"]}],mode:[{type:a.Input}],forcedSearchParams:[{type:a.Input}],picked:[{type:a.Output}]},e}(),j=function(){function e(e,t,o){this.api=e,this.reg=t,this.formService=o,this.mode="search",this.id=null,this.ngModel={},this.fieldType=M,this.AutoCompleteField=C,this.fields=[],this.choices={},this.submit=new a.EventEmitter,this.form=new u.FormGroup({}),this.formset=new u.FormArray([]),this.formsets=new Array,this.is_ready=!1}return e.prototype.ngOnChanges=function(){this.appName&&this.modelName&&this.moduleName&&(this.form=this.reg.forms[this.modelName],console.log(this.form))},e.prototype._onSubmit=function(){this.submit.emit(this.form.value)},e.prototype.buildForm=function(t){if(null!==t&&this.fields.map(function(e){return e._value=t[e.key],e}),this.form=this.formService.toFormGroup(this.fields),"search"!==this.mode&&this.model.formsets)try{for(var e=f(this.model.formsets),o=e.next();!o.done;o=e.next()){var n=o.value,a=this.formService.toFormArray(n.fields,t[n.key]);this.formsets.push(a),this.form.addControl(n.key,a)}}catch(l){r={error:l}}finally{try{o&&!o.done&&(i=e["return"])&&i.call(e)}finally{if(r)throw r.error}}var r,i;this.is_ready=!0},e.decorators=[{type:a.Component,args:[{selector:"ng-crud-model-form",template:'\x3c!-- <mat-progress-bar *ngIf="isLoading" mode="query"></mat-progress-bar> --\x3e\n\n<ng-template [ngIf]="is_ready">\n    \x3c!-- <div class="form-container"> --\x3e\n    <div class="row">\n        <ng-container *ngFor="let field of fields">\n            <ng-crud-form-field  [form]="form" [field]="field"></ng-crud-form-field>\n        </ng-container>\n    </div>\n\n\n    <div *ngFor="let formarray of formsets; let i=index">\n        <mat-divider></mat-divider>\n        <ng-crud-formset  [model]="model" [config]="model.formsets[i]"  [formarray]="formarray" [form]="form"></ng-crud-formset>        \n    </div>\n\n    <div class="row">\n        <button mat-raised-button color="primary" class="submit-button" (click)="_onSubmit()">\n            <span *ngIf="mode === \'search\'">Search</span>\n            <span *ngIf="mode === \'create\'">Create</span>\n            <span *ngIf="mode === \'edit\'">Update</span>\n        </button>\n    </div>\n</ng-template>',styles:[".row{display:flex;flex:1 1 auto;flex-flow:row wrap}.submit-button{align-self:flex-end}"],exportAs:"ngcrudui-model-form"}]}],e.ctorParameters=function(){return[{type:v},{type:h},{type:O}]},e.propDecorators={moduleName:[{type:a.Input}],appName:[{type:a.Input}],modelName:[{type:a.Input}],mode:[{type:a.Input}],id:[{type:a.Input}],submit:[{type:a.Output}]},e}(),G=function(){function e(e,t,o){this.reg=e,this.ref=t,this.data=o}return e.prototype.ngOnInit=function(){this.moduleName=this.data.moduleName,this.appName=this.data.appName,this.modelName=this.data.modelName},e.prototype.picked=function(e){console.log("picked",e),this.ref.close(e)},e.decorators=[{type:a.Component,args:[{template:'<section class="app-settings" *ngIf="modelName">\n\n  <ng-crud-listing (picked)="picked($event)" [modelName]="modelName" [appName]="appName" [moduleName]="moduleName" mode="pick">\n\n  </ng-crud-listing>\n</section>',styles:["#custom-header{padding-top:12px;margin-bottom:12px}.page-title a{color:#333}.mat-tab-nav-bar,mat-tab-nav-bar{border:none!important}.tabs-bar a{color:#fff}"]}]}],e.ctorParameters=function(){return[{type:h},{type:n.MatDialogRef},{type:undefined,decorators:[{type:a.Inject,args:[n.MAT_DIALOG_DATA]}]}]},e}(),E=[],R=function(){function e(e,t,o){this.dialog=e,this.api=t,this.reg=o,this.forcedSearchParams=[],this.modelPath=[]}return e.prototype.ngOnChanges=function(e){var t=this;if("foreign_key"===this.field.control_type){console.log("first change",this.choices);var o=this.field.foreign_model_path.split(".");this.modelPath=o,this.foreign_model=this.reg.getModel(o[0],o[1],o[2]),k=this.foreign_model,this.choices&&(console.log("found choices"),this.filteredOptions=r.of(this.choices));var n=this.form.get(this.field.key);this.filteredOptions=n.valueChanges.pipe(s.startWith(""),s.debounceTime(200),s.distinctUntilChanged(),s.switchMap(function(e){return t._filter(e||null)}))}},e.prototype.getFormControl=function(e){return this.form.get(e)},e.prototype.displayFn=function(e){try{for(var t=f(E),o=t.next();!o.done;o=t.next()){var n=o.value;if(n.id===e)return n[k.external_name_field]}}catch(i){a={error:i}}finally{try{o&&!o.done&&(r=t["return"])&&r.call(t)}finally{if(a)throw a.error}}var a,r},e.prototype._filter=function(e){if("string"!=typeof e)return new r.Observable;var t=e?e.toLowerCase():null,o={};return o[this.foreign_model.external_name_field]=t,this.api.fetch(""+this.foreign_model.api,o).pipe(s.map(function(e){return E=e}))},e.prototype.openListingDialog=function(){var t=this;this.dialog.open(G,{width:"90%",height:"90%",data:{moduleName:this.modelPath[0],appName:this.modelPath[1],modelName:this.modelPath[2]}}).afterClosed().subscribe(function(e){t.form.get(t.field.key).setValue(e)})},e.decorators=[{type:a.Component,args:[{selector:"ng-crud-form-field",template:'<div [ngSwitch]="field.control_type" class="form-field-wrapper" [formGroup]="form">\n\n    <div *ngSwitchCase="\'switch\'">\n        <mat-slide-toggle matInput [formControlName]="field.key">{{ field.label }}</mat-slide-toggle>\n    </div>\n\n    <mat-form-field *ngSwitchCase="\'textarea\'">\n        <mat-label>{{ field.label }}</mat-label>\n        <textarea matInput matTextareaAutosize [formControlName]="field.key"\n            [rows]="field.rowspan || 1"></textarea>\n    </mat-form-field>\n\n    <mat-form-field *ngSwitchCase="\'select\'">\n        <mat-label>{{ field.label }}</mat-label>\n        <mat-select [formControlName]="field.key">\n            <mat-option></mat-option>\n            <mat-option [value]="c.value" *ngFor="let c of field.choices">\n                {{ c.label }}\n            </mat-option>\n        </mat-select>\n    </mat-form-field>\n\n    <mat-form-field *ngSwitchCase="\'date\'">\n        <mat-label>{{ field.label }}</mat-label>\n        <input  matInput [formControlName]="field.key"  [matDatepicker]="myDatepicker" />\n        <mat-datepicker-toggle matSuffix [for]="myDatepicker"></mat-datepicker-toggle>\n        <mat-datepicker #myDatepicker></mat-datepicker>\n    </mat-form-field>\n    \n    <ng-container *ngSwitchCase="\'foreign_key\'">\n        <mat-form-field>\n            <mat-label>{{ field.label }}</mat-label>\n            <input type="text" matInput [formControlName]="field.key" [matAutocomplete]="auto">\n        </mat-form-field>\n        \x3c!-- <button mat-icon-button (click)="openListingDialog()"><mat-icon>search</mat-icon></button> --\x3e\n        \n        <mat-autocomplete #auto="matAutocomplete" [displayWith]="displayFn">\n            <mat-option *ngFor="let option of filteredOptions | async" [value]="option[foreign_model.external_value_field]">\n                {{ option[foreign_model.external_name_field] }}\n            </mat-option>\n        </mat-autocomplete>\n    </ng-container>\n\n    \x3c!-- this fallsback from number and text --\x3e\n    <mat-form-field *ngSwitchDefault>\n        <mat-label>{{ field.label }}</mat-label>\n        <input  matInput [formControlName]="field.key"\n                [type]="field.control_type || field.value_type || \'text\'" />\n    </mat-form-field>\n\n</div>',exportAs:"ngcrudui-form-field",styles:[".form-field-wrapper{margin-right:  24px}"]}]}],e.ctorParameters=function(){return[{type:n.MatDialog},{type:v},{type:h}]},e.propDecorators={form:[{type:a.Input}],forcedSearchParams:[{type:a.Input}],field:[{type:a.Input}],choices:[{type:a.Input}]},e}(),q=function(){function e(e,t,o){this.api=e,this.reg=t,this.formService=o,this.choices={}}return e.prototype.ngOnChanges=function(e){if(e.config.firstChange)try{for(var t=f(e.config.currentValue.fields),o=t.next();!o.done;o=t.next()){var n=o.value;"foreign_key"===n.control_type&&this.getChoices(n)}}catch(i){a={error:i}}finally{try{o&&!o.done&&(r=t["return"])&&r.call(t)}finally{if(a)throw a.error}}var a,r},e.prototype.addForm=function(){var e=this.formService.toFormGroup(this.config.fields);this.formarray.push(e)},e.prototype.getChoices=function(t){var o=this,e=t.foreign_model_path.split("."),n=this.reg.getModel(e[0],e[1],e[2]);this.api.fetch(n.api,{}).subscribe(function(e){o.choices[t.key]=e,console.log(o.choices)})},e.decorators=[{type:a.Component,args:[{selector:"ng-crud-formset",template:'<div [formGroup]="form" *ngIf="formarray" class="formset">\n    <div class="row">\n        <h4> {{ config.label }}</h4>\n        <span class="spacer"></span>\n        <button mat-icon-button (click)="addForm()">\n            <mat-icon>add_circle</mat-icon>\n        </button>\n    </div>\n    <div [formArrayName]="config.key">\n        <mat-grid-list gutterSize="12" [cols]="config.fields.length" rowHeight="60"  *ngFor="let ctrl of formarray.controls; let i=index" [formGroupName]="i">\n            <mat-grid-tile  *ngFor="let f of config.fields">\n                {{ f. key }}\n                <ng-crud-form-field [choices]="choices[f.key]" [form]="ctrl" [field]="f"></ng-crud-form-field>\n            </mat-grid-tile>\n        </mat-grid-list>\n    </div>\n</div>',styles:[".formset{padding-top:12px}.row{display:flex;flex:1 1 auto}.spacer{flex:1 1 auto}"],exportAs:"ngcrudui-formset"}]}],e.ctorParameters=function(){return[{type:v},{type:h},{type:O}]},e.propDecorators={form:[{type:a.Input}],model:[{type:a.Input}],formarray:[{type:a.Input}],config:[{type:a.Input}]},e}(),B=function(){function e(e,t){this.api=e,this.reg=t,this.choices=[],this.dataSource=new Array}return e.prototype.ngOnChanges=function(){var t=this;this.foreign_model&&(this.searchParams={page:1},this.ctrl=this.form.get(this.field.key),console.log("foreign key value",this.ctrl.value),this.filteredOptions=r.of(this.choices),this.filteredOptions=this.ctrl.valueChanges.pipe(s.startWith(""),s.map(function(e){return t.filter(e)})))},e.prototype.filter=function(o){var n=this;return this.choices.filter(function(e){console.log(o);var t=e[n.foreign_model.external_name_field];return!!t&&0===t.toLowerCase().indexOf(o.toLowerCase())})},e.prototype.valueFormatter=function(e){return"("+e[this.model.external_value_field]+") "+e[this.model.external_name_field]},e.prototype.displayWith=function(t){return function(e){return e[t.external_name_field]}},e.decorators=[{type:a.Component,args:[{selector:"ng-crud-autocomplete",template:'<mat-form-field [formGroup]="form">\n  <input type="text" matInput [placeholder]="field.label" [formControl]="ctrl" [matAutocomplete]="auto">\n  <mat-autocomplete #auto="matAutocomplete" [displayWith]="displayWith(foreign_model)">\n      <mat-option *ngFor="let c of filteredOptions | async" [value]="c[foreign_model.external_value_field]">\n        {{ c[foreign_model.external_name_field] }}\n      </mat-option>\n    </mat-autocomplete>\n</mat-form-field>',exportAs:"ngcrudui-autocomplete"}]}],e.ctorParameters=function(){return[{type:v},{type:h}]},e.propDecorators={model:[{type:a.Input}],field:[{type:a.Input}],foreign_model:[{type:a.Input}],form:[{type:a.Input}],choices:[{type:a.Input}],forcedSearchParams:[{type:a.Input}]},e}(),H=function(){function e(e,t){this.api=e,this.reg=t,this.forcedSearchParams=[],this.choices=[]}return e.prototype.ngOnChanges=function(){var t=this;if(this.formGroup){console.log(this.formGroup,this.field.key,this.formGroup.get(this.field.key)),this.filteredOptions=this.formGroup.get(this.field.key).valueChanges.pipe(s.startWith(""),s.map(function(e){return console.log(e),e?e.code:e}),s.map(function(e){return e?t._filter(name):t.choices.slice()})),console.log(this.formGroup);var e=this.field.foreign_model_path.split(".");this.model=this.reg.getModel(e[0],e[1],e[2]),this.api.fetch(""+this.model.api,[]).subscribe(function(e){t.choices=e})}},e.prototype.displayFn=function(e){return e?e.code:e},e.prototype._filter=function(e){var t=e.toLowerCase();return console.log(t),this.choices.filter(function(e){return 0===e.code.toLowerCase().indexOf(t)})},e.decorators=[{type:a.Component,args:[{selector:"ng-crud-foreign-key-field",template:'<mat-form-field>\n    <input type="text" matInput [formControlName]="field.key" [matAutocomplete]="auto">\n</mat-form-field>\n\n<mat-autocomplete #auto="matAutocomplete" [displayWith]="displayFn">\n    <mat-option *ngFor="let option of choices" [value]="option[model.external_value_field]">\n        {{ option[model.external_name_field] }}\n    </mat-option>\n</mat-autocomplete>'}]}],e.ctorParameters=function(){return[{type:v},{type:h}]},e.propDecorators={formGroup:[{type:a.Input}],forcedSearchParams:[{type:a.Input}],field:[{type:a.Input}]},e}(),W=function(){function e(){}return e.decorators=[{type:a.NgModule,args:[{imports:[m.CommonModule,u.FormsModule,u.ReactiveFormsModule,i.HttpClientModule,c.MomentModule,t.RouterModule,p.MatToolbarModule,p.MatSidenavModule,p.MatListModule,p.MatIconModule,p.MatTableModule,p.MatCardModule,p.MatPaginatorModule,p.MatButtonModule,p.MatMenuModule,p.MatProgressBarModule,p.MatFormFieldModule,p.MatInputModule,p.MatCheckboxModule,p.MatSlideToggleModule,p.MatGridListModule,p.MatSnackBarModule,p.MatDatepickerModule,p.MatNativeDateModule,p.MatSelectModule,p.MatTabsModule,p.MatExpansionModule,p.MatAutocompleteModule],declarations:[R,B,T,j,b,g,I,q,H,G],providers:[],exports:[i.HttpClientModule,B,p.MatToolbarModule,p.MatSidenavModule,p.MatListModule,p.MatIconModule,p.MatTableModule,p.MatCardModule,p.MatPaginatorModule,p.MatButtonModule,p.MatMenuModule,p.MatProgressBarModule,p.MatFormFieldModule,p.MatInputModule,p.MatCheckboxModule,p.MatSlideToggleModule,p.MatGridListModule,p.MatSnackBarModule,p.MatNativeDateModule,p.MatDatepickerModule,p.MatSelectModule,p.MatTabsModule,p.MatAutocompleteModule,p.MatExpansionModule,R,T,j,b,g,I,q,H],entryComponents:[G]}]}],e}();e.ListingScreenComponent=g,e.AppScreenComponent=b,e.ModelFormScreenComponent=I,e.Module=S,e.App=F,e.Model=D,e.DefaultForm=A,e.ListingScreen=P,e.EditingScreen=L,e.FieldType=M,e.Field=_,e.Fieldset=x,e.Formset=N,e.AutoCompleteField=C,e.DefaultCrudForm=w,e.Registry=h,e.Navigator=y,e.ApiService=v,e.FormService=O,e.CrudModule=W,e.ɵb=B,e.ɵf=H,e.ɵa=R,e.ɵe=q,e.ɵc=T,e.ɵd=j,e.ɵg=G,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=crud.umd.min.js.map